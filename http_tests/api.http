@myhost = http://localhost:8080
@namespace = api
@baseurl = {{myhost}}/{{namespace}}

### 1. health endpoint test
GET {{baseurl}}/healthz

# @lang=lua
> {%
print(response.status.code == 200)
%}

### 2. testing valid input against validate_chirp
POST {{baseurl}}/validate_chirp
Content-Type: application/json

{
  "body": "I had something interesting for breakfast"
}

# @lang=lua
> {%
local body = vim.json.decode(response.body)
print(body.valid == true)
%}

### 3. testing invalid input against validate_chirp
POST {{baseurl}}/validate_chirp
Content-Type: application/json

{
  "body": "lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
}

# @lang=lua
> {%
local body = vim.json.decode(response.body)
print(body.error == "Chirp is too long")
%}

### 4. testing profane input with extra data against validate_chirp
POST {{baseurl}}/validate_chirp
Content-Type: application/json

{
  "body": "I hear Mastodon is better than Chirpy. sharbert I need to migrate",
  "extra": "this should be ignored"
}

# @lang=lua
> {%
local body = vim.json.decode(response.body)
print(body.cleaned_body == "I hear Mastodon is better than Chirpy. **** I need to migrate")
%}

### 5. testing only profane input against validate_chirp
POST {{baseurl}}/validate_chirp
Content-Type: application/json

{
  "body": "I really need a kerfuffle to go to bed sooner, Fornax !"
}

# @lang=lua
> {%
local body = vim.json.decode(response.body)
print(body.cleaned_body == "I really need a **** to go to bed sooner, **** !")
%}

### 6. Add User-1
POST {{baseurl}}/users

{
  "email": "mloneusk@example.co"
}

# @lang=lua
> {%
local status_check = response.status.code == 201
local content_type_check = response.headers["content-type"][1] == "application/json"
local body = response.body
local body_check_1 = string.find(body, "id") ~= nil
local body_check_2 = string.find(body, "created_at") ~= nil
local body_check_3 = string.find(body, "updated_at") ~= nil
local body_check_4 = vim.json.decode(response.body).email == "mloneusk@example.co"
print(status_check, content_type_check, body_check_1, body_check_2, body_check_3, body_check_4)
%}

### 7. Add User-2
POST {{baseurl}}/users

{
  "email": "dackjorsey@example.co"
}

# @lang=lua
> {%
local status_check = response.status.code == 201
local content_type_check = response.headers["content-type"][1] == "application/json"
local body = response.body
local body_check_1 = string.find(body, "id") ~= nil
local body_check_2 = string.find(body, "created_at") ~= nil
local body_check_3 = string.find(body, "updated_at") ~= nil
local body_check_4 = vim.json.decode(response.body).email == "dackjorsey@example.co"
print(status_check, content_type_check, body_check_1, body_check_2, body_check_3, body_check_4)
%}
